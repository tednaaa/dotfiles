input {
	keyboard {
		xkb {
			layout "us,ru"
			options "ctrl:grouptoggle_capscontrol"
		}
	}

	touchpad {
		tap
	}

	focus-follows-mouse max-scroll-amount="0%"
}

// `niri msg outputs` to get monitors info
output "eDP-1" {
	mode "2560x1600"
	scale 1.5
}
output "HDMI-A-1" {
	mode "1920x1080"
	scale 1
}

layout {
	gaps 3

	center-focused-column "never"

	preset-column-widths {
		proportion 0.33333
		proportion 0.5
		proportion 0.66667
	}

	default-column-width { proportion 0.5; }

	focus-ring {
		width 1
		active-color "#7fc8ff"
		inactive-color "#505050"

		// active-gradient from="#80c8ff" to="#c7ff7f" angle=45
		// inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
	}

	struts { top 3; }
}


spawn-at-startup "waybar"
spawn-at-startup "swaync"

spawn-at-startup "clipse -listen"
spawn-at-startup "wl-clip-persist --clipboard regular"

spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "color-scheme" "prefer-dark"
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "gtk-theme" "Orchis-Dark-Compact"
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "icon-theme" "Papirus-Dark"
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "text-scaling-factor" "1"
spawn-at-startup "gsettings" "set" "org.gnome.desktop.interface" "cursor-size" "24"


hotkey-overlay { skip-at-startup; }

prefer-no-csd

screenshot-path null

// `niri msg pick-window` to get app-id
window-rule {
	open-maximized true
}
window-rule {
	geometry-corner-radius 8
	clip-to-geometry true
}

window-rule {
	match app-id="clipse"
	match app-id="bluetui"
	match app-id="pavucontrol"
	open-floating true
	default-column-width { proportion 0.4; }
  default-window-height { proportion 0.7; }
}
window-rule {
	match app-id="yazi"
	match app-id="dolphin"
	open-floating true
	default-column-width { proportion 0.8; }
  default-window-height { proportion 0.8; }
}

window-rule {
	match app-id=r#"firefox$"# title="^Picture-in-Picture$"
	open-floating true
}

// Block out apps from screen capture.
window-rule {
	match app-id=r#"telegram$"#
	// match app-id=r#"telegram$"#

	block-out-from "screen-capture"

	// Use this instead if you want them visible on third-party screenshot tools.
	// block-out-from "screencast"
}


binds {
	Mod+Shift+Slash { show-hotkey-overlay; }

	Mod+Return hotkey-overlay-title="Open terminal" { spawn "alacritty"; }
	Mod+Space hotkey-overlay-title="Open rofi" { spawn-sh "rofi -show drun"; }
	Super+Alt+L hotkey-overlay-title="Lock the Screen" { spawn "swaylock"; }
	Print hotkey-overlay-title="Screenshot" { spawn "fish" "-c" "screenshot"; }

	Mod+D hotkey-overlay-title="Open clipboard history" { spawn-sh "alacritty --class clipse -e clipse"; }
	Mod+Y hotkey-overlay-title="Open yazi" { spawn-sh "alacritty --class yazi -e yazi"; }
	Mod+T hotkey-overlay-title="Open dolphin" { spawn "dolphin"; }

	XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
	XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
	XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
	XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }

	XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "+10%"; }
	XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "10%-"; }

	Mod+O repeat=false { toggle-overview; }
	Mod+Q repeat=false { close-window; }

	Mod+H     { focus-column-left; }
	Mod+J     { focus-window-or-workspace-down; }
	Mod+K     { focus-window-or-workspace-up; }
	Mod+L     { focus-column-right; }
	Mod+Left  { focus-column-left; }
	Mod+Down  { focus-window-down; }
	Mod+Up    { focus-window-up; }
	Mod+Right { focus-column-right; }

	Mod+Ctrl+Left  { move-column-left; }
	Mod+Ctrl+Down  { move-window-down; }
	Mod+Ctrl+Up    { move-window-up; }
	Mod+Ctrl+Right { move-column-right; }
	Mod+Ctrl+H     { move-column-left; }
	Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
	Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }
	Mod+Ctrl+L     { move-column-right; }

	Mod+Home { focus-column-first; }
	Mod+End  { focus-column-last; }
	Mod+Ctrl+Home { move-column-to-first; }
	Mod+Ctrl+End  { move-column-to-last; }

	Mod+Shift+Left  { focus-monitor-left; }
	Mod+Shift+Down  { focus-monitor-down; }
	Mod+Shift+Up    { focus-monitor-up; }
	Mod+Shift+Right { focus-monitor-right; }
	Mod+Shift+H     { focus-monitor-left; }
	Mod+Shift+J     { focus-monitor-down; }
	Mod+Shift+K     { focus-monitor-up; }
	Mod+Shift+L     { focus-monitor-right; }

	Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
	Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
	Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
	Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
	Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
	Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
	Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
	Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

	Mod+Page_Down      { focus-workspace-down; }
	Mod+Page_Up        { focus-workspace-up; }
	Mod+U              { focus-workspace-down; }
	Mod+I              { focus-workspace-up; }
	Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
	Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
	Mod+Ctrl+U         { move-column-to-workspace-down; }
	Mod+Ctrl+I         { move-column-to-workspace-up; }

	Mod+Shift+Page_Down { move-workspace-down; }
	Mod+Shift+Page_Up   { move-workspace-up; }
	Mod+Shift+U         { move-workspace-down; }
	Mod+Shift+I         { move-workspace-up; }

	Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
	Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
	Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
	Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

	Mod+WheelScrollRight      { focus-column-right; }
	Mod+WheelScrollLeft       { focus-column-left; }
	Mod+Ctrl+WheelScrollRight { move-column-right; }
	Mod+Ctrl+WheelScrollLeft  { move-column-left; }

	Mod+Shift+WheelScrollDown      { focus-column-right; }
	Mod+Shift+WheelScrollUp        { focus-column-left; }
	Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
	Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

	Mod+1 { focus-workspace 1; }
	Mod+2 { focus-workspace 2; }
	Mod+3 { focus-workspace 3; }
	Mod+4 { focus-workspace 4; }
	Mod+5 { focus-workspace 5; }
	Mod+6 { focus-workspace 6; }
	Mod+7 { focus-workspace 7; }
	Mod+8 { focus-workspace 8; }
	Mod+9 { focus-workspace 9; }
	Mod+Ctrl+1 { move-column-to-workspace 1; }
	Mod+Ctrl+2 { move-column-to-workspace 2; }
	Mod+Ctrl+3 { move-column-to-workspace 3; }
	Mod+Ctrl+4 { move-column-to-workspace 4; }
	Mod+Ctrl+5 { move-column-to-workspace 5; }
	Mod+Ctrl+6 { move-column-to-workspace 6; }
	Mod+Ctrl+7 { move-column-to-workspace 7; }
	Mod+Ctrl+8 { move-column-to-workspace 8; }
	Mod+Ctrl+9 { move-column-to-workspace 9; }

	Mod+BracketLeft  { consume-or-expel-window-left; }
	Mod+BracketRight { consume-or-expel-window-right; }

	Mod+Comma  { consume-window-into-column; }
	Mod+Period { expel-window-from-column; }

	Mod+R { switch-preset-column-width; }
	Mod+Shift+R { switch-preset-window-height; }
	Mod+Ctrl+R { reset-window-height; }
	Mod+F { maximize-column; }
	Mod+Shift+F { fullscreen-window; }

	Mod+Ctrl+F { expand-column-to-available-width; }

	Mod+C { center-column; }

	Mod+Ctrl+C { center-visible-columns; }

	Mod+Minus { set-column-width "-10%"; }
	Mod+Equal { set-column-width "+10%"; }

	Mod+Shift+Minus { set-window-height "-10%"; }
	Mod+Shift+Equal { set-window-height "+10%"; }

	Mod+V       { toggle-window-floating; }
	Mod+Shift+V { switch-focus-between-floating-and-tiling; }

	Mod+W { toggle-column-tabbed-display; }

	Mod+Shift+E { quit; }
	Ctrl+Alt+Delete { quit; }

	Mod+Shift+P { power-off-monitors; }

	// Applications such as remote-desktop clients and software KVM switches may
	// request that niri stops processing the keyboard shortcuts defined here
	// so they may, for example, forward the key presses as-is to a remote machine.
	// It's a good idea to bind an escape hatch to toggle the inhibitor,
	// so a buggy application can't hold your session hostage.
	//
	// The allow-inhibiting=false property can be applied to other binds as well,
	// which ensures niri always processes them, even when an inhibitor is active.
	Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
}
